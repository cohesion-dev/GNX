openapi: 3.0.3
info:
  title: 智能动漫生成系统 API
  description: 基于AI技术的动漫内容生成平台API文档
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.example.com/v1
    description: 生产环境
  - url: https://staging-api.example.com/v1
    description: 测试环境
  - url: http://localhost:8080/api
    description: 开发环境

paths:
  # 漫画相关接口
  /comic:
    get:
      tags:
        - 漫画管理
      summary: 获取漫画列表
      description: 获取用户的所有漫画列表，支持分页和状态筛选
      parameters:
        - name: page
          in: query
          description: 页码
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: limit
          in: query
          description: 每页数量
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
        - name: status
          in: query
          description: 状态筛选
          required: false
          schema:
            type: string
            enum: [pending, completed, failed]
      responses:
        '200':
          description: 成功获取漫画列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "success"
                  data:
                    type: object
                    properties:
                      comics:
                        type: array
                        items:
                          $ref: '#/components/schemas/Comic'
                      total:
                        type: integer
                        example: 100
                      page:
                        type: integer
                        example: 1
                      limit:
                        type: integer
                        example: 10
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - 漫画管理
      summary: 创建新漫画
      description: 上传小说文件并创建新的漫画项目
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - title
                - file
                - user_prompt
              properties:
                title:
                  type: string
                  description: 漫画名称
                  example: "我的第一部动漫"
                file:
                  type: string
                  format: binary
                  description: 小说文件
                user_prompt:
                  type: string
                  description: 用户提示词
                  example: "请生成一个温馨的校园恋爱故事"
      responses:
        '201':
          description: 成功创建漫画
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: "success"
                  data:
                    $ref: '#/components/schemas/Comic'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /comic/{id}:
    get:
      tags:
        - 漫画管理
      summary: 获取漫画详情
      description: 获取指定漫画的详细信息
      parameters:
        - name: id
          in: path
          required: true
          description: 漫画ID
          schema:
            type: integer
      responses:
        '200':
          description: 成功获取漫画详情
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "success"
                  data:
                    $ref: '#/components/schemas/ComicDetail'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /comic/{id}/sections:
    get:
      tags:
        - 章节管理
      summary: 获取漫画章节列表
      description: 获取指定漫画的所有章节信息
      parameters:
        - name: id
          in: path
          required: true
          description: 漫画ID
          schema:
            type: integer
      responses:
        '200':
          description: 成功获取章节列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "success"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ComicSection'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /comic/{id}/sections:
    post:
      tags:
        - 章节管理
      summary: 追加章节
      description: 通过上传小说文件追加更多章节到指定漫画
      parameters:
        - name: id
          in: path
          required: true
          description: 漫画ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
                  description: 小说续章文件
      responses:
        '200':
          description: 成功开始追加章节
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "success"
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: "Sections appending started"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /comic/{id}/section/{section_id}/content:
    get:
      tags:
        - 章节管理
      summary: 获取章节内容
      description: 获取指定章节的详细内容
      parameters:
        - name: id
          in: path
          required: true
          description: 漫画ID
          schema:
            type: integer
        - name: section_id
          in: path
          required: true
          description: 章节ID
          schema:
            type: integer
      responses:
        '200':
          description: 成功获取章节内容
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "success"
                  data:
                    $ref: '#/components/schemas/SectionContent'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /comic/{id}/section/{section_id}/storyboards:
    get:
      tags:
        - 章节管理
      summary: 获取章节分镜
      description: 获取指定章节的所有分镜信息
      parameters:
        - name: id
          in: path
          required: true
          description: 漫画ID
          schema:
            type: integer
        - name: section_id
          in: path
          required: true
          description: 章节ID
          schema:
            type: integer
      responses:
        '200':
          description: 成功获取分镜列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "success"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ComicStoryboardPage'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /comic/{id}/section/{section_id}/storyboard/{storyboard_id}/image:
    get:
      tags:
        - 资源管理
      summary: 获取章节图片
      description: 获取指定分镜的图片资源
      parameters:
        - name: id
          in: path
          required: true
          description: 漫画ID
          schema:
            type: integer
        - name: section_id
          in: path
          required: true
          description: 章节ID
          schema:
            type: integer
        - name: storyboard_id
          in: path
          required: true
          description: 分镜ID
          schema:
            type: integer
      responses:
        '200':
          description: 成功获取图片
          content:
            image/*:
              schema:
                type: string
                format: binary
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /tts/{storyboard_tts_id}:
    get:
      tags:
        - 资源管理
      summary: 获取TTS音频
      description: 获取指定分镜的TTS音频流
      parameters:
        - name: storyboard_tts_id
          in: path
          required: true
          description: 分镜TTS ID
          schema:
            type: integer
      responses:
        '200':
          description: 成功获取音频
          content:
            audio/*:
              schema:
                type: string
                format: binary
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    Comic:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "我的第一部动漫"
        brief:
          type: string
          example: "这是一个温馨的校园恋爱故事"
        icon:
          type: string
          example: "https://example.com/icon.jpg"
        icon_prompt:
          type: string
          example: "温馨校园风格的封面图"
        bg:
          type: string
          example: "https://example.com/bg.jpg"
        bg_prompt:
          type: string
          example: "樱花盛开的校园背景"
        novel_file_url:
          type: string
          example: "https://example.com/novel.txt"
        user_prompt:
          type: string
          example: "请生成一个温馨的校园恋爱故事"
        status:
          type: string
          enum: [pending, completed, failed]
          example: "completed"
        has_more_content:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"

    ComicDetail:
      allOf:
        - $ref: '#/components/schemas/Comic'
        - type: object
          properties:
            roles:
              type: array
              items:
                $ref: '#/components/schemas/ComicRole'
            sections:
              type: array
              items:
                $ref: '#/components/schemas/ComicSection'

    ComicRole:
      type: object
      properties:
        id:
          type: integer
          example: 1
        comic_id:
          type: integer
          example: 1
        name:
          type: string
          example: "小明"
        gender:
          type: string
          example: "male"
        age:
          type: string
          example: "17岁"
        image_url:
          type: string
          example: "https://example.com/role1.jpg"
        brief:
          type: string
          example: "一个阳光开朗的男孩"
        hair:
          type: string
          example: "短发，黑色"
        habitual_expr:
          type: string
          example: "经常微笑"
        skin_tone:
          type: string
          example: "健康肤色"
        face_shape:
          type: string
          example: "圆脸"
        voice_name:
          type: string
          example: "zh-CN-YunxiNeural"
        voice_type:
          type: string
          example: "male_young"
        speed_ratio:
          type: number
          format: float
          example: 1.0
        created_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"

    ComicSection:
      type: object
      properties:
        id:
          type: integer
          example: 1
        comic_id:
          type: integer
          example: 1
        index:
          type: integer
          example: 1
        title:
          type: string
          example: "第一章"
        detail:
          type: string
          example: "这是第一章的内容..."
        status:
          type: string
          enum: [pending, completed, failed]
          example: "completed"
        created_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"

    ComicStoryboardPage:
      type: object
      description: 漫画分镜页面（一页包含多个面板）
      properties:
        id:
          type: integer
          example: 1
        section_id:
          type: integer
          example: 1
        index:
          type: integer
          example: 0
        image_prompt:
          type: string
          example: "一个阳光明媚的校园场景"
        layout_hint:
          type: string
          example: "上下布局，上方是全景，下方是特写"
        page_summary:
          type: string
          example: "主角在校园中遇见女主角"
        status:
          type: string
          enum: [pending, completed, failed]
          example: "completed"
        created_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"
        panels:
          type: array
          items:
            $ref: '#/components/schemas/ComicStoryboardPanel'

    ComicStoryboardPanel:
      type: object
      description: 漫画分镜面板（一个面板包含一个画面和相关文本）
      properties:
        id:
          type: integer
          example: 1
        section_id:
          type: integer
          example: 1
        page_id:
          type: integer
          example: 1
        index:
          type: integer
          example: 0
        visual_prompt:
          type: string
          example: "阳光明媚的校园操场，两个学生在交谈"
        panel_summary:
          type: string
          example: "小明和小红第一次见面"
        image_url:
          type: string
          example: "https://example.com/panel1.jpg"
        status:
          type: string
          enum: [pending, completed, failed]
          example: "completed"
        created_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"
        source_text_segments:
          type: array
          items:
            $ref: '#/components/schemas/ComicStoryboardSegment'

    ComicStoryboardSegment:
      type: object
      description: 漫画文本片段（对话或旁白）
      properties:
        id:
          type: integer
          example: 1
        panel_id:
          type: integer
          example: 1
        index:
          type: integer
          example: 0
        text:
          type: string
          example: "你好，我是小明"
        character_refs:
          type: array
          items:
            type: string
          example: ["小明"]
        tts_url:
          type: string
          example: "https://example.com/tts1.mp3"
        role_id:
          type: integer
          nullable: true
          example: 1
        created_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"

    SectionContent:
      type: object
      properties:
        section:
          $ref: '#/components/schemas/ComicSection'
        pages:
          type: array
          items:
            $ref: '#/components/schemas/ComicStoryboardPage'

    Error:
      type: object
      properties:
        code:
          type: integer
          example: 400
        message:
          type: string
          example: "Bad Request"
        details:
          type: string
          example: "Invalid request parameters"

  responses:
    BadRequest:
      description: 请求参数错误
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFound:
      description: 资源不存在
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalServerError:
      description: 服务器内部错误
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []

tags:
  - name: 漫画管理
    description: 漫画相关的操作接口
  - name: 章节管理
    description: 章节相关的操作接口
  - name: 资源管理
    description: 资源文件相关的操作接口
